name: Deployment

on:
  workflow_call:
    inputs:
      branch:
        description: Branch to check out
        required: true
        type: string
      github_sha:
        description: SHA of commit to check out (defaults to latest)
        required: false
        type: string
      remote_dir:
        description: Path to the directory on the remote to transfer files to
        required: true
        type: string
      local_dir:
        description: Path to the local directory to transfer files from
        required: false
        type: string
        default: '.'
      exclude_paths:
        description: Paths to exclude from transfer, as accepted by rsync --exclude
        required: false
        type: string
      post_deploy_commands:
        description: Commands to execute post-deployment (bash)
        required: true
        type: string
      ssh_host:
        description: SSH hostname
        required: true
        type: string
      ssh_port:
        description: SSH port number
        required: false
        type: string
        default: 22
      ssh_user:
        description: SSH user
        required: true
        type: string
      known_hosts:
        description: SSH hosts to trust
        required: true
        type: string
      timeout_minutes:
        description: The maximum number of minutes to let a job run before GitHub automatically cancels it
        required: false
        type: string
        default: 30
    secrets:
      SSH_PRIVATE_KEY:
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      branch: ${{ steps.set.outputs.branch }}
      local_dir: ${{ steps.set.outputs.local_dir }}
      ssh_host: ${{ steps.set.outputs.ssh_host }}
      ssh_user: ${{ steps.set.outputs.ssh_user }}
      ssh_port: ${{ steps.set.outputs.ssh_port }}
      deploy_sha: ${{ steps.set.outputs.deploy_sha }}
      fetch_depth: ${{ steps.set.outputs.fetch_depth }}
      timeout_minutes: ${{ steps.set.outputs.timeout_minutes }}
    steps:
      - name: Set deployment variables
        id: set
        shell: bash
        run: |
          echo "branch=$(echo "${{ inputs.branch }}" | xargs)" >> $GITHUB_OUTPUT
          echo "ssh_host=$(echo "${{ inputs.ssh_host }}" | xargs)" >> $GITHUB_OUTPUT
          echo "ssh_user=$(echo "${{ inputs.ssh_user }}" | xargs)" >> $GITHUB_OUTPUT
          echo "${{ inputs.ssh_port.default }}"
          echo "${{ inputs.local_dir.default }}"
          echo "${{ inputs.timeout_minutes.default }}"
          if [ ! -z "${{ inputs.github_sha }}" ]
          then
            echo "deploy_sha=${{ inputs.github_sha }}" >> $GITHUB_OUTPUT
            echo "fetch_depth=0" >> $GITHUB_OUTPUT
          else
            echo "deploy_sha=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "fetch_depth=1" >> $GITHUB_OUTPUT
          fi
          if [ ! -z "${{ inputs.ssh_port }}" ]
          then
            echo "ssh_port=${{ inputs.ssh_port }}" >> $GITHUB_OUTPUT
          else
            echo "ssh_port=${{ inputs.ssh_port.default }}" >> $GITHUB_OUTPUT
          fi
          if [ ! -z "${{ inputs.local_dir }}" ]
          then
            echo "local_dir=${{ inputs.local_dir }}" >> $GITHUB_OUTPUT
          else
            echo "local_dir=${{ inputs.local_dir.default }}" >> $GITHUB_OUTPUT
          fi
          if [ ! -z "${{ inputs.timeout_minutes }}" ]
          then
            echo "timeout_minutes=${{ inputs.timeout_minutes }}" >> $GITHUB_OUTPUT
          else
            echo "timeout_minutes=${{ inputs.timeout_minutes.default }}" >> $GITHUB_OUTPUT
          fi
  deployment:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(needs.setup.outputs.timeout_minutes) }}
    steps:
      - name: Checkout
        uses: esign/.github/.github/actions/checkout@v1
        with:
          branch: ${{ needs.setup.outputs.branch }}
          github_sha: ${{ needs.setup.outputs.deploy_sha }}
      - name: Log revision
        uses: esign/.github/.github/actions/log-revision@v1
      - name: Transfer
        uses: esign/.github/.github/actions/transfer@development
        with:
          remote_dir: ${{ inputs.remote_dir }}
          local_dir: ${{ needs.setup.outputs.local_dir }}
          post_transfer_commands: ${{ inputs.post_deploy_commands }}
          ssh_host: ${{ needs.setup.outputs.ssh_host }}
          ssh_port: ${{ fromJSON(needs.setup.outputs.ssh_port) }}
          ssh_user: ${{ needs.setup.outputs.ssh_user }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_known_hosts: ${{ inputs.known_hosts }}
          exclude_paths: ${{ inputs.exclude_paths }}
