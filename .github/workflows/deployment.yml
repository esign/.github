name: Deployment

on:
  workflow_call:
    inputs:
      branch:
        description: Branch to check out
        required: true
        type: string
      github_sha:
        description: SHA of commit to check out (defaults to latest)
        required: false
        type: string
      scratch_deploy:
        description: Whether to deploy all files from scratch
        required: false
        default: 'true'
        type: string
      remote_dir:
        description: Path to the directory on the remote to transfer files to
        required: true
        type: string
      local_dir:
        description: Path to the local directory to transfer files from
        required: false
        type: string
      exclude_paths:
        description: Paths to exclude from transfer, as accepted by rsync --exclude
        required: false
        type: string
      post_deploy_commands:
        description: Commands to execute post-deployment (bash)
        required: true
        type: string
      ssh_host:
        description: SSH hostname
        required: true
        type: string
      ssh_port:
        description: SSH port number
        required: false
        type: string
      ssh_user:
        description: SSH user
        required: true
        type: string
      known_hosts:
        description: SSH hosts to trust
        required: true
        type: string
      timeout_minutes:
        description: The maximum number of minutes to let a job run before GitHub automatically cancels it
        required: false
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true

jobs:
  deployment:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout_minutes && fromJSON(inputs.timeout_minutes) || 30 }}
    steps:
      - name: Set deployment variables
        shell: bash
        run: |
          echo "branch=$(echo "${{ inputs.branch }}" | xargs)" >> $GITHUB_ENV
          echo "ssh_host=$(echo "${{ inputs.ssh_host }}" | xargs)" >> $GITHUB_ENV
          echo "ssh_user=$(echo "${{ inputs.ssh_user }}" | xargs)" >> $GITHUB_ENV

          if [ ! -z "${{ inputs.github_sha }}" ]
          then
            echo "deploy_sha=${{ inputs.github_sha }}" >> $GITHUB_ENV
            echo "fetch_depth=0" >> $GITHUB_ENV
          else
            echo "deploy_sha=${{ github.sha }}" >> $GITHUB_ENV
            echo "fetch_depth=2" >> $GITHUB_ENV
          fi
      - name: Checkout
        uses: esign/.github/.github/actions/checkout@feature/diff-deploy
        with:
          branch: ${{ env.branch }}
          github_sha: ${{ env.deploy_sha }}
          fetch_depth: ${{ env.fetch_depth }}
      - id: log-deployment-revision
        name: Log deployment revision
        uses: esign/.github/.github/actions/log-revision@feature/diff-deploy
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ inputs.known_hosts }}
      - id: read-server-revision
        name: Read server revision
        shell: bash
        run: |
          revision=$(scp -P ${{ inputs.ssh_port || '22' }} ${{ inputs.ssh_user }}@${{ inputs.ssh_host }}:${{ inputs.remote_dir }}/.revision /dev/stdout)
          echo "revision=$revision" >> $GITHUB_OUTPUT
      - id: compose-diff
        name: Compose diff
        shell: bash
        run: |
          old_sha="${{ steps.read-server-revision.outputs.revision }}"
          new_sha="${{ steps.log-deployment-revision.outputs.commit_sha }}"
          paths=
          
          if [ "${{ inputs.scratch_deploy }}" = false ] && [ ! -z $old_sha ]
          then
            paths=$(git diff "$old_sha" "$new_sha")
          fi
        
          echo "paths=$paths" >> $GITHUB_OUTPUT
      - name: Transfer
        uses: esign/.github/.github/actions/transfer@feature/diff-deploy
        with:
          remote_dir: ${{ inputs.remote_dir }}
          local_dir: ${{ inputs.local_dir || '.' }}
          post_transfer_commands: ${{ inputs.post_deploy_commands }}
          ssh_host: ${{ env.ssh_host }}
          ssh_port: ${{ inputs.ssh_port && fromJSON(inputs.ssh_port) || 22 }}
          ssh_user: ${{ env.ssh_user }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          exclude_paths: ${{ inputs.exclude_paths }}
          include_paths: ${{ steps.compose-diff.outputs.paths }}
      - name: Write server revision
        uses: esign/.github/.github/actions/execute@feature/diff-deploy
        with:
          host: ${{ inputs.ssh_host }}
          port: ${{ inputs.ssh_port }}
          user: ${{ inputs.ssh_user }}
          target_path: ${{ inputs.remote_dir }}
          commands: |
            echo "${{ steps.log-deployment-revision.outputs.commit_sha }}" > .revision
